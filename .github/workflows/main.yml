name: Build, Test & Release on Push

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build

  dependency-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

    #   - name: Run npm audit
    #     run: npm audit --audit-level=high

  secret-scan:
    uses: khumozin/workflow-templates/.github/workflows/secret-scan.yml@1.1.0
    secrets:
      gitguardian_api_key: ${{ secrets.GITGUARDIAN_API_KEY }}

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    needs: [build, dependency-analysis, secret-scan]
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm test -- --watch=false --browsers=ChromeHeadless

  e2e-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    needs: [build, dependency-analysis, secret-scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start: npm run start
          browser: chrome
          wait-on: "http://localhost:4200"
          wait-on-timeout: 180

  semantic-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    needs: [unit-test, e2e-test]

    permissions:
      contents: write

    outputs:
      pkg-version: ${{ steps.get-version.outputs.pkg-version }}
      prev-pkg-version: ${{ steps.get-previous-version.outputs.prev-pkg-version }}

    steps:
      - uses: actions/checkout@v3.3.0
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Get previous release version
        id: get-previous-version
        run: |
          PREV_PKG_VERSION=$(npm pkg get version)
          echo "prev-pkg-version=$PREV_PKG_VERSION" > $GITHUB_OUTPUT

      - name: Semantic release
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 2
          command: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get updated release version
        id: get-version
        run: |
          PKG_VERSION=$(npm pkg get version)
          echo "pkg-version=$PKG_VERSION" > $GITHUB_OUTPUT

  image-build:
    needs: [semantic-release]
    if: ${{ needs.semantic-release.outputs.pkg-version != needs.semantic-release.outputs.prev-pkg-version }}
    uses: khumozin/workflow-templates/.github/workflows/secret-scan.yml@main
    with:
        image_name: my-app
        tag: ${{ needs.semantic-release.outputs.pkg-version }}
    secrets:
        registry_username: ${{ secrets.DOCKER_USERNAME }}
        registry_password: ${{ secrets.DOCKER_PASSWORD }}

  update-manifests:
    runs-on: ubuntu-latest
    needs: [image-build, semantic-release]
    steps:
      - name: Checkout GitOps Repo
        uses: actions/checkout@v4
        with:
          repository: khumozin/news-app-gitops
          ref: main
          token: ${{ secrets.NEWSAPP_PAT }}

      - name: GitOps - Update Deployment Manifest
        run: |
          cd dev
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/news-app:v${{ needs.semantic-release.outputs.pkg-version }}|" deployment.yml

      - name: Commit and push changes
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add dev/deployment.yml
          git commit -m "chore: bump image version to v${{ needs.semantic-release.outputs.pkg-version }}"
          git push
